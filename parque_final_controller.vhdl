-- Net parque_final - IOPT
-- Automatic code generated by IOPT2VHDL XSLT transformation.
-- by GRES Research Group - 2014 


Library IEEE;
Use IEEE.STD_LOGIC_1164.ALL;
Use IEEE.STD_LOGIC_ARITH.ALL;
Use IEEE.STD_LOGIC_UNSIGNED.ALL;


Entity parque_final IS
Port(
    Clk : IN STD_LOGIC;
    PRES1_IN : IN STD_LOGIC;
    TICKET_IN : IN STD_LOGIC;
    PRES2_IN : IN STD_LOGIC;
    PRESS1_OUT : IN STD_LOGIC;
    PRESS2_OUT : IN STD_LOGIC;
    TICKET_OUT : IN STD_LOGIC;
    AND_21A : IN STD_LOGIC;
    AND_21B : IN STD_LOGIC;
    PRESS1_IN_2 : IN STD_LOGIC;
    PRESS2_IN_2 : IN STD_LOGIC;
    TICKET_IN_2 : IN STD_LOGIC;
    PRESS1_OUT_2 : IN STD_LOGIC;
    PRESS2_OUT_2 : IN STD_LOGIC;
    TICKET_OUT_2 : IN STD_LOGIC;
    PRESS1_IN_3 : IN STD_LOGIC;
    PRESS2_IN_3 : IN STD_LOGIC;
    TICKET_IN_3 : IN STD_LOGIC;
    PRESS1_OUT_3 : IN STD_LOGIC;
    PRESS2_OUT_3 : IN STD_LOGIC;
    TICKET_OUT_3 : IN STD_LOGIC;
    AND_12A : IN STD_LOGIC;
    AND_12B : IN STD_LOGIC;
    ABERTO_IN : IN STD_LOGIC;
    ABERTO_OUT : IN STD_LOGIC;
    CANC_IN : OUT STD_LOGIC;
    CANC_OUT : OUT STD_LOGIC;
    CANC_IN_2 : OUT STD_LOGIC;
    CANC_OUT_2 : OUT STD_LOGIC;
    PISO2_FULL : OUT STD_LOGIC;
    PISO1_FULL : OUT STD_LOGIC;
    CANC_OUT_3 : OUT STD_LOGIC;
    CANC_IN_3 : OUT STD_LOGIC;
    CARRO_IN_2 : OUT STD_LOGIC;
    CARRO_IN_3 : OUT STD_LOGIC;
    CARRO_IN : OUT STD_LOGIC;
    CARRO_OUT : OUT STD_LOGIC;
    CARRO_OUT_2 : OUT STD_LOGIC;
    CARRO_OUT_3 : OUT STD_LOGIC;
    OCU_PISO_1 : OUT INTEGER RANGE 0 TO 100;
    OCU_PISO_2 : OUT INTEGER RANGE 0 TO 100;
    Carro_12 : OUT STD_LOGIC;
    Carro_21 : OUT STD_LOGIC;
    Enable : IN STD_LOGIC;
    Reset : IN STD_LOGIC
);
End parque_final;

Architecture Structural OF parque_final IS

    Signal p_2: INTEGER RANGE 0 TO 1 := 1;
    Signal p_4: INTEGER RANGE 0 TO 1 := 0;
    Signal p_6: INTEGER RANGE 0 TO 1 := 0;
    Signal p_8: INTEGER RANGE 0 TO 1 := 0;
    Signal p_10: INTEGER RANGE 0 TO 1 := 0;
    Signal p_40: INTEGER RANGE 0 TO 100 := 40;
    Signal p_41: INTEGER RANGE 0 TO 100 := 0;
    Signal p_49: INTEGER RANGE 0 TO 1 := 0;
    Signal p_56: INTEGER RANGE 0 TO 1 := 0;
    Signal p_59: INTEGER RANGE 0 TO 1 := 0;
    Signal p_67: INTEGER RANGE 0 TO 1 := 0;
    Signal p_80: INTEGER RANGE 0 TO 1 := 0;
    Signal p_82: INTEGER RANGE 0 TO 1 := 0;
    Signal p_84: INTEGER RANGE 0 TO 1 := 0;
    Signal p_93: INTEGER RANGE 0 TO 100 := 0;
    Signal p_110: INTEGER RANGE 0 TO 1 := 0;
    Signal p_112: INTEGER RANGE 0 TO 1 := 0;
    Signal p_114: INTEGER RANGE 0 TO 1 := 0;
    Signal p_157: INTEGER RANGE 0 TO 100 := 60;
    Signal p_162: INTEGER RANGE 0 TO 1 := 1;
    Signal p_164: INTEGER RANGE 0 TO 1 := 0;
    Signal p_166: INTEGER RANGE 0 TO 1 := 0;
    Signal p_168: INTEGER RANGE 0 TO 1 := 0;
    Signal p_170: INTEGER RANGE 0 TO 1 := 0;
    Signal p_199: INTEGER RANGE 0 TO 1 := 0;
    Signal p_202: INTEGER RANGE 0 TO 1 := 0;
    Signal p_204: INTEGER RANGE 0 TO 1 := 0;
    Signal p_208: INTEGER RANGE 0 TO 1 := 0;
    Signal p_235: INTEGER RANGE 0 TO 1 := 1;
    Signal p_237: INTEGER RANGE 0 TO 1 := 0;
    Signal p_239: INTEGER RANGE 0 TO 1 := 0;
    Signal p_241: INTEGER RANGE 0 TO 1 := 0;
    Signal p_243: INTEGER RANGE 0 TO 1 := 0;
    Signal p_268: INTEGER RANGE 0 TO 1 := 0;
    Signal p_271: INTEGER RANGE 0 TO 1 := 0;
    Signal p_273: INTEGER RANGE 0 TO 1 := 0;
    Signal p_277: INTEGER RANGE 0 TO 1 := 0;
    Signal p_303: INTEGER RANGE 0 TO 1 := 0;
    Signal p_305: INTEGER RANGE 0 TO 1 := 0;
    Signal p_307: INTEGER RANGE 0 TO 1 := 0;
    Signal p_313: INTEGER RANGE 0 TO 1 := 0;
    Signal p_315: INTEGER RANGE 0 TO 1 := 0;
    Signal p_317: INTEGER RANGE 0 TO 1 := 0;
    Signal p_354: INTEGER RANGE 0 TO 1 := 0;
    Signal p_359: INTEGER RANGE 0 TO 1 := 0;
    Signal p_364: INTEGER RANGE 0 TO 1 := 0;
    Signal p_369: INTEGER RANGE 0 TO 1 := 0;
    Signal p_380: INTEGER RANGE 0 TO 1 := 0;
    Signal p_386: INTEGER RANGE 0 TO 3 := 0;
    Signal p_392: INTEGER RANGE 0 TO 2 := 0;
    Signal p_397: INTEGER RANGE 0 TO 2 := 0;
    Signal p_403: INTEGER RANGE 0 TO 2 := 0;
    Signal p_408: INTEGER RANGE 0 TO 1 := 1;
    Signal p_413: INTEGER RANGE 0 TO 1 := 1;
    Signal p_419: INTEGER RANGE 0 TO 1 := 1;
    Signal p_429: INTEGER RANGE 0 TO 1 := 1;
    Signal p_436: INTEGER RANGE 0 TO 1 := 1;
    Signal p_448: INTEGER RANGE 0 TO 1 := 0;
    Signal p_453: INTEGER RANGE 0 TO 1 := 0;
    Signal p_458: INTEGER RANGE 0 TO 1 := 0;
    Signal p_463: INTEGER RANGE 0 TO 1 := 0;


    Signal s_CANC_IN : STD_LOGIC := '0';
    Signal s_CANC_OUT : STD_LOGIC := '0';
    Signal s_CANC_IN_2 : STD_LOGIC := '0';
    Signal s_CANC_OUT_2 : STD_LOGIC := '0';
    Signal s_PISO2_FULL : STD_LOGIC := '0';
    Signal s_PISO1_FULL : STD_LOGIC := '0';
    Signal s_CANC_OUT_3 : STD_LOGIC := '0';
    Signal s_CANC_IN_3 : STD_LOGIC := '0';
    Signal s_CARRO_IN_2 : STD_LOGIC := '0';
    Signal s_CARRO_IN_3 : STD_LOGIC := '0';
    Signal s_CARRO_IN : STD_LOGIC := '0';
    Signal s_CARRO_OUT : STD_LOGIC := '0';
    Signal s_CARRO_OUT_2 : STD_LOGIC := '0';
    Signal s_CARRO_OUT_3 : STD_LOGIC := '0';
    Signal s_OCU_PISO_1 : INTEGER RANGE 0 TO 100 := 0;
    Signal s_OCU_PISO_2 : INTEGER RANGE 0 TO 100 := 0;
    Signal s_Carro_12 : STD_LOGIC := '0';
    Signal s_Carro_21 : STD_LOGIC := '0';

    -- Array implementation:

Begin
    -- Selected array items:

    proc_in_events: PROCESS( Clk, Enable ) IS
    Begin
      If falling_edge(Clk) Then
        If Reset = '0' AND Enable = '1' Then
        End If;
      End If;
    End PROCESS;


    proc_transitions: PROCESS( Clk, Enable, Reset ) IS
      Variable p_2_add, p_2_avail : INTEGER RANGE 0 to 1;
      Variable p_4_add, p_4_avail : INTEGER RANGE 0 to 1;
      Variable p_6_add, p_6_avail : INTEGER RANGE 0 to 1;
      Variable p_8_add, p_8_avail : INTEGER RANGE 0 to 1;
      Variable p_10_add, p_10_avail : INTEGER RANGE 0 to 1;
      Variable p_40_add, p_40_avail : INTEGER RANGE 0 to 100;
      Variable p_41_add, p_41_avail : INTEGER RANGE 0 to 100;
      Variable p_49_add, p_49_avail : INTEGER RANGE 0 to 1;
      Variable p_56_add, p_56_avail : INTEGER RANGE 0 to 1;
      Variable p_59_add, p_59_avail : INTEGER RANGE 0 to 1;
      Variable p_67_add, p_67_avail : INTEGER RANGE 0 to 1;
      Variable p_80_add, p_80_avail : INTEGER RANGE 0 to 1;
      Variable p_82_add, p_82_avail : INTEGER RANGE 0 to 1;
      Variable p_84_add, p_84_avail : INTEGER RANGE 0 to 1;
      Variable p_93_add, p_93_avail : INTEGER RANGE 0 to 100;
      Variable p_110_add, p_110_avail : INTEGER RANGE 0 to 1;
      Variable p_112_add, p_112_avail : INTEGER RANGE 0 to 1;
      Variable p_114_add, p_114_avail : INTEGER RANGE 0 to 1;
      Variable p_157_add, p_157_avail : INTEGER RANGE 0 to 100;
      Variable p_162_add, p_162_avail : INTEGER RANGE 0 to 1;
      Variable p_164_add, p_164_avail : INTEGER RANGE 0 to 1;
      Variable p_166_add, p_166_avail : INTEGER RANGE 0 to 1;
      Variable p_168_add, p_168_avail : INTEGER RANGE 0 to 1;
      Variable p_170_add, p_170_avail : INTEGER RANGE 0 to 1;
      Variable p_199_add, p_199_avail : INTEGER RANGE 0 to 1;
      Variable p_202_add, p_202_avail : INTEGER RANGE 0 to 1;
      Variable p_204_add, p_204_avail : INTEGER RANGE 0 to 1;
      Variable p_208_add, p_208_avail : INTEGER RANGE 0 to 1;
      Variable p_235_add, p_235_avail : INTEGER RANGE 0 to 1;
      Variable p_237_add, p_237_avail : INTEGER RANGE 0 to 1;
      Variable p_239_add, p_239_avail : INTEGER RANGE 0 to 1;
      Variable p_241_add, p_241_avail : INTEGER RANGE 0 to 1;
      Variable p_243_add, p_243_avail : INTEGER RANGE 0 to 1;
      Variable p_268_add, p_268_avail : INTEGER RANGE 0 to 1;
      Variable p_271_add, p_271_avail : INTEGER RANGE 0 to 1;
      Variable p_273_add, p_273_avail : INTEGER RANGE 0 to 1;
      Variable p_277_add, p_277_avail : INTEGER RANGE 0 to 1;
      Variable p_303_add, p_303_avail : INTEGER RANGE 0 to 1;
      Variable p_305_add, p_305_avail : INTEGER RANGE 0 to 1;
      Variable p_307_add, p_307_avail : INTEGER RANGE 0 to 1;
      Variable p_313_add, p_313_avail : INTEGER RANGE 0 to 1;
      Variable p_315_add, p_315_avail : INTEGER RANGE 0 to 1;
      Variable p_317_add, p_317_avail : INTEGER RANGE 0 to 1;
      Variable p_354_add, p_354_avail : INTEGER RANGE 0 to 1;
      Variable p_359_add, p_359_avail : INTEGER RANGE 0 to 1;
      Variable p_364_add, p_364_avail : INTEGER RANGE 0 to 1;
      Variable p_369_add, p_369_avail : INTEGER RANGE 0 to 1;
      Variable p_380_add, p_380_avail : INTEGER RANGE 0 to 1;
      Variable p_386_add, p_386_avail : INTEGER RANGE 0 to 3;
      Variable p_392_add, p_392_avail : INTEGER RANGE 0 to 2;
      Variable p_397_add, p_397_avail : INTEGER RANGE 0 to 2;
      Variable p_403_add, p_403_avail : INTEGER RANGE 0 to 2;
      Variable p_408_add, p_408_avail : INTEGER RANGE 0 to 1;
      Variable p_413_add, p_413_avail : INTEGER RANGE 0 to 1;
      Variable p_419_add, p_419_avail : INTEGER RANGE 0 to 1;
      Variable p_429_add, p_429_avail : INTEGER RANGE 0 to 1;
      Variable p_436_add, p_436_avail : INTEGER RANGE 0 to 1;
      Variable p_448_add, p_448_avail : INTEGER RANGE 0 to 1;
      Variable p_453_add, p_453_avail : INTEGER RANGE 0 to 1;
      Variable p_458_add, p_458_avail : INTEGER RANGE 0 to 1;
      Variable p_463_add, p_463_avail : INTEGER RANGE 0 to 1;
    Begin
      If Reset = '1' Then
          p_2 <= 1;
          p_4 <= 0;
          p_6 <= 0;
          p_8 <= 0;
          p_10 <= 0;
          p_40 <= 40;
          p_41 <= 0;
          p_49 <= 0;
          p_56 <= 0;
          p_59 <= 0;
          p_67 <= 0;
          p_80 <= 0;
          p_82 <= 0;
          p_84 <= 0;
          p_93 <= 0;
          p_110 <= 0;
          p_112 <= 0;
          p_114 <= 0;
          p_157 <= 60;
          p_162 <= 1;
          p_164 <= 0;
          p_166 <= 0;
          p_168 <= 0;
          p_170 <= 0;
          p_199 <= 0;
          p_202 <= 0;
          p_204 <= 0;
          p_208 <= 0;
          p_235 <= 1;
          p_237 <= 0;
          p_239 <= 0;
          p_241 <= 0;
          p_243 <= 0;
          p_268 <= 0;
          p_271 <= 0;
          p_273 <= 0;
          p_277 <= 0;
          p_303 <= 0;
          p_305 <= 0;
          p_307 <= 0;
          p_313 <= 0;
          p_315 <= 0;
          p_317 <= 0;
          p_354 <= 0;
          p_359 <= 0;
          p_364 <= 0;
          p_369 <= 0;
          p_380 <= 0;
          p_386 <= 0;
          p_392 <= 0;
          p_397 <= 0;
          p_403 <= 0;
          p_408 <= 1;
          p_413 <= 1;
          p_419 <= 1;
          p_429 <= 1;
          p_436 <= 1;
          p_448 <= 0;
          p_453 <= 0;
          p_458 <= 0;
          p_463 <= 0;
      Elsif rising_edge(Clk) Then
        If Enable = '1' Then
          p_2_avail := p_2;
          p_2_add := 0;   -- pl_2;
          p_4_avail := p_4;
          p_4_add := 0;   -- pl_4;
          p_6_avail := p_6;
          p_6_add := 0;   -- pl_6;
          p_8_avail := p_8;
          p_8_add := 0;   -- pl_8;
          p_10_avail := p_10;
          p_10_add := 0;   -- pl_10;
          p_40_avail := p_40;
          p_40_add := 0;   -- CAP_2;
          p_41_avail := p_41;
          p_41_add := 0;   -- VAGAS_2;
          p_49_avail := p_49;
          p_49_add := 0;   -- pl_49;
          p_56_avail := p_56;
          p_56_add := 0;   -- pl_56;
          p_59_avail := p_59;
          p_59_add := 0;   -- pl_59;
          p_67_avail := p_67;
          p_67_add := 0;   -- pl_67;
          p_80_avail := p_80;
          p_80_add := 0;   -- pl_80;
          p_82_avail := p_82;
          p_82_add := 0;   -- pl_82;
          p_84_avail := p_84;
          p_84_add := 0;   -- pl_84;
          p_93_avail := p_93;
          p_93_add := 0;   -- VAGAS_1;
          p_110_avail := p_110;
          p_110_add := 0;   -- pl_80_2;
          p_112_avail := p_112;
          p_112_add := 0;   -- pl_82_2;
          p_114_avail := p_114;
          p_114_add := 0;   -- pl_84_2;
          p_157_avail := p_157;
          p_157_add := 0;   -- CAP_1;
          p_162_avail := p_162;
          p_162_add := 0;   -- pl_2_2;
          p_164_avail := p_164;
          p_164_add := 0;   -- pl_4_2;
          p_166_avail := p_166;
          p_166_add := 0;   -- pl_6_2;
          p_168_avail := p_168;
          p_168_add := 0;   -- pl_8_2;
          p_170_avail := p_170;
          p_170_add := 0;   -- pl_10_2;
          p_199_avail := p_199;
          p_199_add := 0;   -- pl_49_2;
          p_202_avail := p_202;
          p_202_add := 0;   -- pl_56_2;
          p_204_avail := p_204;
          p_204_add := 0;   -- pl_59_2;
          p_208_avail := p_208;
          p_208_add := 0;   -- pl_67_2;
          p_235_avail := p_235;
          p_235_add := 0;   -- pl_2_2_2;
          p_237_avail := p_237;
          p_237_add := 0;   -- pl_4_2_2;
          p_239_avail := p_239;
          p_239_add := 0;   -- pl_6_2_2;
          p_241_avail := p_241;
          p_241_add := 0;   -- pl_8_2_2;
          p_243_avail := p_243;
          p_243_add := 0;   -- pl_10_2_2;
          p_268_avail := p_268;
          p_268_add := 0;   -- pl_49_2_2;
          p_271_avail := p_271;
          p_271_add := 0;   -- pl_56_2_2;
          p_273_avail := p_273;
          p_273_add := 0;   -- pl_59_2_2;
          p_277_avail := p_277;
          p_277_add := 0;   -- pl_67_2_2;
          p_303_avail := p_303;
          p_303_add := 0;   -- pl_80_3;
          p_305_avail := p_305;
          p_305_add := 0;   -- pl_82_3;
          p_307_avail := p_307;
          p_307_add := 0;   -- pl_84_3;
          p_313_avail := p_313;
          p_313_add := 0;   -- pl_80_2_2;
          p_315_avail := p_315;
          p_315_add := 0;   -- pl_82_2_2;
          p_317_avail := p_317;
          p_317_add := 0;   -- pl_84_2_2;
          p_354_avail := p_354;
          p_354_add := 0;   -- pl_354;
          p_359_avail := p_359;
          p_359_add := 0;   -- pl_359;
          p_364_avail := p_364;
          p_364_add := 0;   -- pl_364;
          p_369_avail := p_369;
          p_369_add := 0;   -- pl_369;
          p_380_avail := p_380;
          p_380_add := 0;   -- pl_380;
          p_386_avail := p_386;
          p_386_add := 0;   -- pl_386;
          p_392_avail := p_392;
          p_392_add := 0;   -- pl_392;
          p_397_avail := p_397;
          p_397_add := 0;   -- pl_397;
          p_403_avail := p_403;
          p_403_add := 0;   -- pl_403;
          p_408_avail := p_408;
          p_408_add := 0;   -- pl_408;
          p_413_avail := p_413;
          p_413_add := 0;   -- pl_413;
          p_419_avail := p_419;
          p_419_add := 0;   -- pl_419;
          p_429_avail := p_429;
          p_429_add := 0;   -- pl_429;
          p_436_avail := p_436;
          p_436_add := 0;   -- pl_436;
          p_448_avail := p_448;
          p_448_add := 0;   -- pl_448;
          p_453_avail := p_453;
          p_453_add := 0;   -- pl_453;
          p_458_avail := p_458;
          p_458_add := 0;   -- pl_458;
          p_463_avail := p_463;
          p_463_add := 0;   -- pl_463;


          -- Transition 3 - chega_1
          If (p_2_avail >= 1) and 
             (conv_integer(PRES1_IN) = 1) -- guard expr 
          Then
              p_2_avail := p_2_avail - 1;    -- pl_2
              p_4_add := p_4_add + 1;   -- pl_4
          End If;

          -- Transition 5 - ticket_in
          If (p_4_avail >= 1) and
             (p_40_avail >= 1) and 
             (conv_integer(PRES1_IN) = 1 AND conv_integer(TICKET_IN) = 1 AND conv_integer(ABERTO_IN) = 1) -- guard expr 
          Then
              p_4_avail := p_4_avail - 1;    -- pl_4
              p_40_avail := p_40_avail - 1;    -- CAP_2
              p_6_add := p_6_add + 1;   -- pl_6
              p_369_add := p_369_add + 1;   -- pl_369
          End If;

          -- Transition 7 - chega_2
          If (p_6_avail >= 1) and 
             (conv_integer(PRES2_IN) = 1 AND conv_integer(PRES2_IN) = 1) -- guard expr 
          Then
              p_6_avail := p_6_avail - 1;    -- pl_6
              p_8_add := p_8_add + 1;   -- pl_8
          End If;

          -- Transition 9 - sai_1
          If (p_8_avail >= 1) and 
             (conv_integer(PRES1_IN) = 0 AND conv_integer(PRES2_IN) = 1) -- guard expr 
          Then
              p_8_avail := p_8_avail - 1;    -- pl_8
              p_10_add := p_10_add + 1;   -- pl_10
          End If;

          -- Transition 11 - sai_2
          If (p_10_avail >= 1) and 
             (conv_integer(PRES2_IN) = 0) -- guard expr 
          Then
              p_10_avail := p_10_avail - 1;    -- pl_10
              p_359_add := p_359_add + 1;   -- pl_359
          End If;

          -- Transition 22 - sai_1
          If (p_4_avail >= 1) and 
             (conv_integer(PRES1_IN) = 0) -- guard expr 
          Then
              p_4_avail := p_4_avail - 1;    -- pl_4
              p_2_add := p_2_add + 1;   -- pl_2
          End If;

          -- Transition 25 - sai_1
          If (p_6_avail >= 1) and
             (p_369_avail >= 1) and 
             (conv_integer(s_CARRO_IN) = 0 AND ( conv_integer(PRES1_IN) = 0 AND conv_integer(PRES2_IN) = 0 )) -- guard expr 
          Then
              p_6_avail := p_6_avail - 1;    -- pl_6
              p_369_avail := p_369_avail - 1;    -- pl_369
              p_2_add := p_2_add + 1;   -- pl_2
              p_40_add := p_40_add + 1;   -- CAP_2
          End If;

          -- Transition 28 - sai_2
          If (p_8_avail >= 1) and 
             (conv_integer(PRES1_IN) = 1 AND conv_integer(PRES2_IN) = 0) -- guard expr 
          Then
              p_8_avail := p_8_avail - 1;    -- pl_8
              p_6_add := p_6_add + 1;   -- pl_6
          End If;

          -- Transition 31 - chega_1
          If (p_10_avail >= 1) and 
             (conv_integer(PRES2_IN) = 1 AND conv_integer(PRES1_IN) = 1) -- guard expr 
          Then
              p_10_avail := p_10_avail - 1;    -- pl_10
              p_8_add := p_8_add + 1;   -- pl_8
          End If;

          -- Transition 46 - CHEGA_1
          If (p_41_avail >= 1) and
             (p_408_avail >= 1) and 
             (conv_integer(PRESS1_OUT) = 1) -- guard expr 
          Then
              p_41_avail := p_41_avail - 1;    -- VAGAS_2
              p_408_avail := p_408_avail - 1;    -- pl_408
              p_49_add := p_49_add + 1;   -- pl_49
          End If;

          -- Transition 51 - SAI_1
          If (p_49_avail >= 1) and 
             (conv_integer(PRESS1_OUT) = 0) -- guard expr 
          Then
              p_49_avail := p_49_avail - 1;    -- pl_49
              p_41_add := p_41_add + 1;   -- VAGAS_2
              p_408_add := p_408_add + 1;   -- pl_408
          End If;

          -- Transition 54 - TICKET_OUT
          If (p_49_avail >= 1) and 
             (conv_integer(TICKET_OUT) = 1 AND conv_integer(PRESS1_OUT) = 1 AND conv_integer(ABERTO_OUT) = 1) -- guard expr 
          Then
              p_49_avail := p_49_avail - 1;    -- pl_49
              p_56_add := p_56_add + 1;   -- pl_56
          End If;

          -- Transition 58 - CHEGA_2
          If (p_56_avail >= 1) and 
             (conv_integer(PRESS1_OUT) = 1 AND conv_integer(PRESS2_OUT) = 1) -- guard expr 
          Then
              p_56_avail := p_56_avail - 1;    -- pl_56
              p_59_add := p_59_add + 1;   -- pl_59
          End If;

          -- Transition 60 - SAI_2
          If (p_59_avail >= 1) and 
             (conv_integer(PRESS1_OUT) = 1 AND conv_integer(PRESS2_OUT) = 0) -- guard expr 
          Then
              p_59_avail := p_59_avail - 1;    -- pl_59
              p_56_add := p_56_add + 1;   -- pl_56
          End If;

          -- Transition 65 - SAI_1
          If (p_59_avail >= 1) and 
             (conv_integer(PRESS1_OUT) = 0 AND conv_integer(PRESS2_OUT) = 1) -- guard expr 
          Then
              p_59_avail := p_59_avail - 1;    -- pl_59
              p_67_add := p_67_add + 1;   -- pl_67
          End If;

          -- Transition 66 - CHEGA_1
          If (p_67_avail >= 1) and 
             (conv_integer(PRESS1_OUT) = 1 AND conv_integer(PRESS2_OUT) = 1) -- guard expr 
          Then
              p_67_avail := p_67_avail - 1;    -- pl_67
              p_59_add := p_59_add + 1;   -- pl_59
          End If;

          -- Transition 72 - SAI_2
          If (p_67_avail >= 1) and 
             (conv_integer(PRESS2_OUT) = 0) -- guard expr 
          Then
              p_67_avail := p_67_avail - 1;    -- pl_67
              p_403_add := p_403_add + 2;   -- pl_403
          End If;

          -- Transition 75 - SAI_1
          If (p_56_avail >= 1) and 
             (conv_integer(PRESS1_OUT) = 0) -- guard expr 
          Then
              p_56_avail := p_56_avail - 1;    -- pl_56
              p_41_add := p_41_add + 1;   -- VAGAS_2
              p_408_add := p_408_add + 1;   -- pl_408
          End If;

          -- Transition 78 - CHEGA_21A
          If (p_41_avail >= 1) and
             (p_429_avail >= 1) and 
             (conv_integer(AND_12A) = 1) -- guard expr 
          Then
              p_41_avail := p_41_avail - 1;    -- VAGAS_2
              p_429_avail := p_429_avail - 1;    -- pl_429
              p_80_add := p_80_add + 1;   -- pl_80
          End If;

          -- Transition 81 - CHEGA_21B
          If (p_80_avail >= 1) and 
             (conv_integer(AND_12A) = 1 AND conv_integer(AND_12B) = 1) -- guard expr 
          Then
              p_80_avail := p_80_avail - 1;    -- pl_80
              p_82_add := p_82_add + 1;   -- pl_82
          End If;

          -- Transition 83 - SAI_21A
          If (p_82_avail >= 1) and 
             (conv_integer(AND_12A) = 0 AND conv_integer(AND_12B) = 1) -- guard expr 
          Then
              p_82_avail := p_82_avail - 1;    -- pl_82
              p_84_add := p_84_add + 1;   -- pl_84
          End If;

          -- Transition 85 - SAI_21B
          If (p_84_avail >= 1) and 
             (conv_integer(AND_12B) = 0) -- guard expr 
          Then
              p_84_avail := p_84_avail - 1;    -- pl_84
              p_429_add := p_429_add + 1;   -- pl_429
              p_448_add := p_448_add + 1;   -- pl_448
          End If;

          -- Transition 96 - SAI_21A
          If (p_80_avail >= 1) and 
             (conv_integer(AND_12A) = 0) -- guard expr 
          Then
              p_80_avail := p_80_avail - 1;    -- pl_80
              p_41_add := p_41_add + 1;   -- VAGAS_2
              p_429_add := p_429_add + 1;   -- pl_429
          End If;

          -- Transition 97 - SAI_21B
          If (p_82_avail >= 1) and 
             (conv_integer(AND_12A) = 1 AND conv_integer(AND_12B) = 0) -- guard expr 
          Then
              p_82_avail := p_82_avail - 1;    -- pl_82
              p_80_add := p_80_add + 1;   -- pl_80
          End If;

          -- Transition 98 - CHEGA_21A
          If (p_84_avail >= 1) and 
             (conv_integer(AND_12A) = 1 AND conv_integer(AND_12B) = 1) -- guard expr 
          Then
              p_84_avail := p_84_avail - 1;    -- pl_84
              p_82_add := p_82_add + 1;   -- pl_82
          End If;

          -- Transition 109 - SAI_21A
          If (p_110_avail >= 1) and 
             (conv_integer(AND_12A) = 0) -- guard expr 
          Then
              p_110_avail := p_110_avail - 1;    -- pl_80_2
              p_436_add := p_436_add + 1;   -- pl_436
              p_463_add := p_463_add + 1;   -- pl_463
          End If;

          -- Transition 111 - SAI_21B
          If (p_112_avail >= 1) and 
             (conv_integer(AND_12A) = 1 AND conv_integer(AND_12B) = 0) -- guard expr 
          Then
              p_112_avail := p_112_avail - 1;    -- pl_82_2
              p_110_add := p_110_add + 1;   -- pl_80_2
          End If;

          -- Transition 113 - CHEGA_21A
          If (p_114_avail >= 1) and 
             (conv_integer(AND_12A) = 1 AND conv_integer(AND_12B) = 1) -- guard expr 
          Then
              p_114_avail := p_114_avail - 1;    -- pl_84_2
              p_112_add := p_112_add + 1;   -- pl_82_2
          End If;

          -- Transition 115 - CHEGA_21B
          If (p_93_avail >= 1) and
             (p_436_avail >= 1) and 
             (conv_integer(AND_12B) = 1) -- guard expr 
          Then
              p_93_avail := p_93_avail - 1;    -- VAGAS_1
              p_436_avail := p_436_avail - 1;    -- pl_436
              p_114_add := p_114_add + 1;   -- pl_84_2
          End If;

          -- Transition 139 - SAI_21B
          If (p_114_avail >= 1) and 
             (conv_integer(AND_12B) = 0) -- guard expr 
          Then
              p_114_avail := p_114_avail - 1;    -- pl_84_2
              p_93_add := p_93_add + 1;   -- VAGAS_1
              p_436_add := p_436_add + 1;   -- pl_436
          End If;

          -- Transition 140 - SAI_21A
          If (p_112_avail >= 1) and 
             (conv_integer(AND_12A) = 0 AND conv_integer(AND_12B) = 1) -- guard expr 
          Then
              p_112_avail := p_112_avail - 1;    -- pl_82_2
              p_114_add := p_114_add + 1;   -- pl_84_2
          End If;

          -- Transition 141 - CHEGA_21B
          If (p_110_avail >= 1) and 
             (conv_integer(AND_12A) = 1 AND conv_integer(AND_12B) = 1) -- guard expr 
          Then
              p_110_avail := p_110_avail - 1;    -- pl_80_2
              p_112_add := p_112_add + 1;   -- pl_82_2
          End If;

          -- Transition 163 - chega_1_2
          If (p_162_avail >= 1) and 
             (conv_integer(PRESS1_IN_2) = 1) -- guard expr 
          Then
              p_162_avail := p_162_avail - 1;    -- pl_2_2
              p_164_add := p_164_add + 1;   -- pl_4_2
          End If;

          -- Transition 167 - chega_2_2
          If (p_166_avail >= 1) and 
             (conv_integer(PRESS1_IN_2) = 1 AND conv_integer(PRESS2_IN_2) = 1) -- guard expr 
          Then
              p_166_avail := p_166_avail - 1;    -- pl_6_2
              p_168_add := p_168_add + 1;   -- pl_8_2
          End If;

          -- Transition 169 - sai_1_2
          If (p_168_avail >= 1) and 
             (conv_integer(PRESS1_IN_2) = 0 AND conv_integer(PRESS2_IN_2) = 1) -- guard expr 
          Then
              p_168_avail := p_168_avail - 1;    -- pl_8_2
              p_170_add := p_170_add + 1;   -- pl_10_2
          End If;

          -- Transition 171 - sai_2_2
          If (p_170_avail >= 1) and 
             (conv_integer(PRESS2_IN_2) = 0) -- guard expr 
          Then
              p_170_avail := p_170_avail - 1;    -- pl_10_2
              p_354_add := p_354_add + 1;   -- pl_354
          End If;

          -- Transition 172 - sai_1_3
          If (p_164_avail >= 1) and 
             (conv_integer(PRESS1_IN_2) = 0) -- guard expr 
          Then
              p_164_avail := p_164_avail - 1;    -- pl_4_2
              p_162_add := p_162_add + 1;   -- pl_2_2
          End If;

          -- Transition 173 - sai_1_4
          If (p_166_avail >= 1) and
             (p_380_avail >= 1) and 
             (conv_integer(PRESS1_IN_2) = 0 AND conv_integer(PRESS2_IN_2) = 0 AND conv_integer(s_CARRO_IN_2) = 0) -- guard expr 
          Then
              p_166_avail := p_166_avail - 1;    -- pl_6_2
              p_380_avail := p_380_avail - 1;    -- pl_380
              p_162_add := p_162_add + 1;   -- pl_2_2
              p_157_add := p_157_add + 1;   -- CAP_1
          End If;

          -- Transition 174 - sai_2_3
          If (p_168_avail >= 1) and 
             (conv_integer(PRESS1_IN_2) = 1 AND conv_integer(PRESS2_IN_2) = 0) -- guard expr 
          Then
              p_168_avail := p_168_avail - 1;    -- pl_8_2
              p_166_add := p_166_add + 1;   -- pl_6_2
          End If;

          -- Transition 195 - tr_195
          If (p_170_avail >= 1) and 
             (conv_integer(PRESS1_IN_2) = 1 AND conv_integer(PRESS2_IN_2) = 1) -- guard expr 
          Then
              p_170_avail := p_170_avail - 1;    -- pl_10_2
              p_168_add := p_168_add + 1;   -- pl_8_2
          End If;

          -- Transition 198 - CHEGA_1_2
          If (p_93_avail >= 1) and
             (p_413_avail >= 1) and 
             (conv_integer(PRESS1_OUT_2) = 1) -- guard expr 
          Then
              p_93_avail := p_93_avail - 1;    -- VAGAS_1
              p_413_avail := p_413_avail - 1;    -- pl_413
              p_199_add := p_199_add + 1;   -- pl_49_2
          End If;

          -- Transition 200 - SAI_1_2
          If (p_199_avail >= 1) and 
             (conv_integer(PRESS1_OUT_2) = 0) -- guard expr 
          Then
              p_199_avail := p_199_avail - 1;    -- pl_49_2
              p_93_add := p_93_add + 1;   -- VAGAS_1
              p_413_add := p_413_add + 1;   -- pl_413
          End If;

          -- Transition 201 - TICKET_OUT_2
          If (p_199_avail >= 1) and 
             (conv_integer(TICKET_OUT_2) = 1 AND conv_integer(PRESS1_OUT_2) = 1 AND conv_integer(ABERTO_OUT) = 1) -- guard expr 
          Then
              p_199_avail := p_199_avail - 1;    -- pl_49_2
              p_202_add := p_202_add + 1;   -- pl_56_2
          End If;

          -- Transition 203 - CHEGA_2_2
          If (p_202_avail >= 1) and 
             (conv_integer(PRESS1_OUT_2) = 1 AND conv_integer(PRESS2_OUT_2) = 1) -- guard expr 
          Then
              p_202_avail := p_202_avail - 1;    -- pl_56_2
              p_204_add := p_204_add + 1;   -- pl_59_2
          End If;

          -- Transition 205 - SAI_2_2
          If (p_204_avail >= 1) and 
             (conv_integer(PRESS1_OUT_2) = 1 AND conv_integer(PRESS2_OUT_2) = 0) -- guard expr 
          Then
              p_204_avail := p_204_avail - 1;    -- pl_59_2
              p_202_add := p_202_add + 1;   -- pl_56_2
          End If;

          -- Transition 206 - SAI_1_3
          If (p_204_avail >= 1) and 
             (conv_integer(PRESS1_OUT_2) = 0 AND conv_integer(PRESS2_OUT_2) = 1) -- guard expr 
          Then
              p_204_avail := p_204_avail - 1;    -- pl_59_2
              p_208_add := p_208_add + 1;   -- pl_67_2
          End If;

          -- Transition 207 - CHEGA_1_3
          If (p_208_avail >= 1) and 
             (conv_integer(PRESS1_OUT_2) = 1 AND conv_integer(PRESS2_OUT_2) = 1) -- guard expr 
          Then
              p_208_avail := p_208_avail - 1;    -- pl_67_2
              p_204_add := p_204_add + 1;   -- pl_59_2
          End If;

          -- Transition 209 - SAI_2_3
          If (p_208_avail >= 1) and 
             (conv_integer(PRESS2_OUT_2) = 0) -- guard expr 
          Then
              p_208_avail := p_208_avail - 1;    -- pl_67_2
              p_397_add := p_397_add + 2;   -- pl_397
          End If;

          -- Transition 210 - SAI_1_4
          If (p_202_avail >= 1) and 
             (conv_integer(PRESS1_OUT_2) = 0) -- guard expr 
          Then
              p_202_avail := p_202_avail - 1;    -- pl_56_2
              p_93_add := p_93_add + 1;   -- VAGAS_1
              p_413_add := p_413_add + 1;   -- pl_413
          End If;

          -- Transition 236 - chega_1_2_2
          If (p_235_avail >= 1) and 
             (conv_integer(PRESS1_IN_3) = 1) -- guard expr 
          Then
              p_235_avail := p_235_avail - 1;    -- pl_2_2_2
              p_237_add := p_237_add + 1;   -- pl_4_2_2
          End If;

          -- Transition 238 - ticket_in_2_2
          If (p_237_avail >= 1) and
             (p_157_avail >= 1) and 
             (conv_integer(PRESS1_IN_3) = 1 AND conv_integer(TICKET_IN_3) = 1 AND conv_integer(ABERTO_IN) = 1) -- guard expr 
          Then
              p_237_avail := p_237_avail - 1;    -- pl_4_2_2
              p_157_avail := p_157_avail - 1;    -- CAP_1
              p_239_add := p_239_add + 1;   -- pl_6_2_2
              p_386_add := p_386_add + 1;   -- pl_386
          End If;

          -- Transition 240 - chega_2_2_2
          If (p_239_avail >= 1) and 
             (conv_integer(PRESS1_IN_3) = 1 AND conv_integer(PRESS2_IN_3) = 1) -- guard expr 
          Then
              p_239_avail := p_239_avail - 1;    -- pl_6_2_2
              p_241_add := p_241_add + 1;   -- pl_8_2_2
          End If;

          -- Transition 242 - sai_1_2_2
          If (p_241_avail >= 1) and 
             (conv_integer(PRESS1_IN_3) = 0 AND conv_integer(PRESS2_IN_3) = 1) -- guard expr 
          Then
              p_241_avail := p_241_avail - 1;    -- pl_8_2_2
              p_243_add := p_243_add + 1;   -- pl_10_2_2
          End If;

          -- Transition 244 - sai_2_2_2
          If (p_243_avail >= 1) and 
             (conv_integer(PRESS2_IN_3) = 0) -- guard expr 
          Then
              p_243_avail := p_243_avail - 1;    -- pl_10_2_2
              p_364_add := p_364_add + 1;   -- pl_364
          End If;

          -- Transition 245 - sai_1_3_2
          If (p_237_avail >= 1) and 
             (conv_integer(PRESS1_IN_3) = 0) -- guard expr 
          Then
              p_237_avail := p_237_avail - 1;    -- pl_4_2_2
              p_235_add := p_235_add + 1;   -- pl_2_2_2
          End If;

          -- Transition 246 - sai_1_4_2
          If (p_239_avail >= 1) and
             (p_386_avail >= 1) and 
             (conv_integer(PRESS1_IN_3) = 0 AND conv_integer(PRESS2_IN_3) = 0 AND conv_integer(s_CARRO_IN_3) = 0) -- guard expr 
          Then
              p_239_avail := p_239_avail - 1;    -- pl_6_2_2
              p_386_avail := p_386_avail - 1;    -- pl_386
              p_235_add := p_235_add + 1;   -- pl_2_2_2
              p_157_add := p_157_add + 1;   -- CAP_1
          End If;

          -- Transition 247 - sai_2_3_2
          If (p_241_avail >= 1) and 
             (conv_integer(PRESS1_IN_3) = 1 AND conv_integer(PRESS2_IN_3) = 0) -- guard expr 
          Then
              p_241_avail := p_241_avail - 1;    -- pl_8_2_2
              p_239_add := p_239_add + 1;   -- pl_6_2_2
          End If;

          -- Transition 248 - tr_195_2
          If (p_243_avail >= 1) and 
             (conv_integer(PRESS1_IN_3) = 1 AND conv_integer(PRESS2_IN_3) = 1) -- guard expr 
          Then
              p_243_avail := p_243_avail - 1;    -- pl_10_2_2
              p_241_add := p_241_add + 1;   -- pl_8_2_2
          End If;

          -- Transition 267 - CHEGA_1_2_2
          If (p_93_avail >= 1) and
             (p_419_avail >= 1) and 
             (conv_integer(PRESS1_OUT_3) = 1) -- guard expr 
          Then
              p_93_avail := p_93_avail - 1;    -- VAGAS_1
              p_419_avail := p_419_avail - 1;    -- pl_419
              p_268_add := p_268_add + 1;   -- pl_49_2_2
          End If;

          -- Transition 269 - SAI_1_2_2
          If (p_268_avail >= 1) and 
             (conv_integer(PRESS1_OUT_3) = 0) -- guard expr 
          Then
              p_268_avail := p_268_avail - 1;    -- pl_49_2_2
              p_93_add := p_93_add + 1;   -- VAGAS_1
              p_419_add := p_419_add + 1;   -- pl_419
          End If;

          -- Transition 270 - TICKET_OUT_2_2
          If (p_268_avail >= 1) and 
             (conv_integer(TICKET_OUT_3) = 1 AND conv_integer(PRESS1_OUT_3) = 1 AND conv_integer(ABERTO_OUT) = 1) -- guard expr 
          Then
              p_268_avail := p_268_avail - 1;    -- pl_49_2_2
              p_271_add := p_271_add + 1;   -- pl_56_2_2
          End If;

          -- Transition 272 - CHEGA_2_2_2
          If (p_271_avail >= 1) and 
             (conv_integer(PRESS1_OUT_3) = 1 AND conv_integer(PRESS2_OUT_3) = 1) -- guard expr 
          Then
              p_271_avail := p_271_avail - 1;    -- pl_56_2_2
              p_273_add := p_273_add + 1;   -- pl_59_2_2
          End If;

          -- Transition 274 - SAI_2_2_2
          If (p_273_avail >= 1) and 
             (conv_integer(PRESS1_OUT_3) = 1 AND conv_integer(PRESS2_OUT_3) = 0) -- guard expr 
          Then
              p_273_avail := p_273_avail - 1;    -- pl_59_2_2
              p_271_add := p_271_add + 1;   -- pl_56_2_2
          End If;

          -- Transition 275 - SAI_1_3_2
          If (p_273_avail >= 1) and 
             (conv_integer(PRESS1_OUT_3) = 0 AND conv_integer(PRESS2_OUT_3) = 1) -- guard expr 
          Then
              p_273_avail := p_273_avail - 1;    -- pl_59_2_2
              p_277_add := p_277_add + 1;   -- pl_67_2_2
          End If;

          -- Transition 276 - CHEGA_1_3_2
          If (p_277_avail >= 1) and 
             (conv_integer(PRESS1_OUT_3) = 1 AND conv_integer(PRESS2_OUT_3) = 1) -- guard expr 
          Then
              p_277_avail := p_277_avail - 1;    -- pl_67_2_2
              p_273_add := p_273_add + 1;   -- pl_59_2_2
          End If;

          -- Transition 278 - SAI_2_3_2
          If (p_277_avail >= 1) and 
             (conv_integer(PRESS2_OUT_3) = 0) -- guard expr 
          Then
              p_277_avail := p_277_avail - 1;    -- pl_67_2_2
              p_392_add := p_392_add + 2;   -- pl_392
          End If;

          -- Transition 279 - SAI_1_4_2
          If (p_271_avail >= 1) and 
             (conv_integer(PRESS1_OUT_3) = 0) -- guard expr 
          Then
              p_271_avail := p_271_avail - 1;    -- pl_56_2_2
              p_93_add := p_93_add + 1;   -- VAGAS_1
              p_419_add := p_419_add + 1;   -- pl_419
          End If;

          -- Transition 302 - CHEGA_21A_2
          If (p_41_avail >= 1) and
             (p_429_avail >= 1) and 
             (conv_integer(AND_21B) = 1) -- guard expr 
          Then
              p_41_avail := p_41_avail - 1;    -- VAGAS_2
              p_429_avail := p_429_avail - 1;    -- pl_429
              p_303_add := p_303_add + 1;   -- pl_80_3
          End If;

          -- Transition 304 - CHEGA_21B_2
          If (p_303_avail >= 1) and 
             (conv_integer(AND_21A) = 1 AND conv_integer(AND_21B) = 1) -- guard expr 
          Then
              p_303_avail := p_303_avail - 1;    -- pl_80_3
              p_305_add := p_305_add + 1;   -- pl_82_3
          End If;

          -- Transition 306 - SAI_21A_2
          If (p_305_avail >= 1) and 
             (conv_integer(AND_21A) = 1 AND conv_integer(AND_21B) = 0) -- guard expr 
          Then
              p_305_avail := p_305_avail - 1;    -- pl_82_3
              p_307_add := p_307_add + 1;   -- pl_84_3
          End If;

          -- Transition 308 - SAI_21B_2
          If (p_307_avail >= 1) and 
             (conv_integer(AND_21A) = 0) -- guard expr 
          Then
              p_307_avail := p_307_avail - 1;    -- pl_84_3
              p_429_add := p_429_add + 1;   -- pl_429
              p_453_add := p_453_add + 1;   -- pl_453
          End If;

          -- Transition 309 - SAI_21A_3
          If (p_303_avail >= 1) and 
             (conv_integer(AND_21B) = 0) -- guard expr 
          Then
              p_303_avail := p_303_avail - 1;    -- pl_80_3
              p_41_add := p_41_add + 1;   -- VAGAS_2
              p_429_add := p_429_add + 1;   -- pl_429
          End If;

          -- Transition 310 - SAI_21B_3
          If (p_305_avail >= 1) and 
             (conv_integer(AND_21A) = 0 AND conv_integer(AND_21B) = 1) -- guard expr 
          Then
              p_305_avail := p_305_avail - 1;    -- pl_82_3
              p_303_add := p_303_add + 1;   -- pl_80_3
          End If;

          -- Transition 311 - CHEGA_21A_3
          If (p_307_avail >= 1) and 
             (conv_integer(AND_21A) = 1 AND conv_integer(AND_21B) = 1) -- guard expr 
          Then
              p_307_avail := p_307_avail - 1;    -- pl_84_3
              p_305_add := p_305_add + 1;   -- pl_82_3
          End If;

          -- Transition 312 - SAI_21A_4
          If (p_313_avail >= 1) and 
             (conv_integer(AND_21B) = 0) -- guard expr 
          Then
              p_313_avail := p_313_avail - 1;    -- pl_80_2_2
              p_436_add := p_436_add + 1;   -- pl_436
              p_458_add := p_458_add + 1;   -- pl_458
          End If;

          -- Transition 314 - SAI_21B_4
          If (p_315_avail >= 1) and 
             (conv_integer(AND_21A) = 0 AND conv_integer(AND_21B) = 1) -- guard expr 
          Then
              p_315_avail := p_315_avail - 1;    -- pl_82_2_2
              p_313_add := p_313_add + 1;   -- pl_80_2_2
          End If;

          -- Transition 316 - CHEGA_21A_4
          If (p_317_avail >= 1) and 
             (conv_integer(AND_21A) = 1 AND conv_integer(AND_21B) = 1) -- guard expr 
          Then
              p_317_avail := p_317_avail - 1;    -- pl_84_2_2
              p_315_add := p_315_add + 1;   -- pl_82_2_2
          End If;

          -- Transition 318 - CHEGA_21B_3
          If (p_93_avail >= 1) and
             (p_436_avail >= 1) and 
             (conv_integer(AND_21A) = 1) -- guard expr 
          Then
              p_93_avail := p_93_avail - 1;    -- VAGAS_1
              p_436_avail := p_436_avail - 1;    -- pl_436
              p_317_add := p_317_add + 1;   -- pl_84_2_2
          End If;

          -- Transition 319 - SAI_21B_5
          If (p_317_avail >= 1) and 
             (conv_integer(AND_21A) = 0) -- guard expr 
          Then
              p_317_avail := p_317_avail - 1;    -- pl_84_2_2
              p_93_add := p_93_add + 1;   -- VAGAS_1
              p_436_add := p_436_add + 1;   -- pl_436
          End If;

          -- Transition 320 - SAI_21A_5
          If (p_315_avail >= 1) and 
             (conv_integer(AND_21A) = 1 AND conv_integer(AND_21B) = 0) -- guard expr 
          Then
              p_315_avail := p_315_avail - 1;    -- pl_82_2_2
              p_317_add := p_317_add + 1;   -- pl_84_2_2
          End If;

          -- Transition 321 - CHEGA_21B_4
          If (p_313_avail >= 1) and 
             (conv_integer(AND_21A) = 1 AND conv_integer(AND_21B) = 1) -- guard expr 
          Then
              p_313_avail := p_313_avail - 1;    -- pl_80_2_2
              p_315_add := p_315_add + 1;   -- pl_82_2_2
          End If;

          -- Transition 355 - tr_355
          If (p_354_avail >= 1)
          Then
              p_354_avail := p_354_avail - 1;    -- pl_354
              p_162_add := p_162_add + 1;   -- pl_2_2
          End If;

          -- Transition 360 - tr_360
          If (p_359_avail >= 1)
          Then
              p_359_avail := p_359_avail - 1;    -- pl_359
              p_2_add := p_2_add + 1;   -- pl_2
          End If;

          -- Transition 365 - tr_365
          If (p_364_avail >= 1)
          Then
              p_364_avail := p_364_avail - 1;    -- pl_364
              p_235_add := p_235_add + 1;   -- pl_2_2_2
          End If;

          -- Transition 370 - tr_370
          If (p_369_avail >= 1) and 
             (conv_integer(s_CARRO_IN) = 1 AND ( conv_integer(PRES1_IN) = 0 AND conv_integer(PRES2_IN) = 0 )) -- guard expr 
          Then
              p_369_avail := p_369_avail - 1;    -- pl_369
              p_41_add := p_41_add + 1;   -- VAGAS_2
          End If;

          -- Transition 381 - tr_381
          If (p_380_avail >= 1) and 
             (conv_integer(s_CARRO_IN_2) = 1 AND conv_integer(PRESS1_IN_2) = 0 AND conv_integer(PRESS2_IN_2) = 0) -- guard expr 
          Then
              p_380_avail := p_380_avail - 1;    -- pl_380
              p_93_add := p_93_add + 1;   -- VAGAS_1
          End If;

          -- Transition 387 - tr_387
          If (p_386_avail >= 1) and 
             (conv_integer(s_CARRO_IN_3) = 1 AND conv_integer(PRESS1_IN_3) = 0 AND conv_integer(PRESS2_IN_3) = 0) -- guard expr 
          Then
              p_386_avail := p_386_avail - 1;    -- pl_386
              p_93_add := p_93_add + 1;   -- VAGAS_1
          End If;

          -- Transition 393 - tr_393
          If (p_392_avail >= 1)
          Then
              p_392_avail := p_392_avail - 1;    -- pl_392
              p_157_add := p_157_add + 1;   -- CAP_1
          End If;

          -- Transition 398 - tr_398
          If (p_397_avail >= 1)
          Then
              p_397_avail := p_397_avail - 1;    -- pl_397
              p_157_add := p_157_add + 1;   -- CAP_1
          End If;

          -- Transition 404 - tr_404
          If (p_403_avail >= 1)
          Then
              p_403_avail := p_403_avail - 1;    -- pl_403
              p_40_add := p_40_add + 1;   -- CAP_2
          End If;

          -- Transition 409 - tr_409
          If (p_403_avail >= 1)
          Then
              p_403_avail := p_403_avail - 1;    -- pl_403
              p_408_add := p_408_add + 1;   -- pl_408
          End If;

          -- Transition 414 - tr_414
          If (p_397_avail >= 1)
          Then
              p_397_avail := p_397_avail - 1;    -- pl_397
              p_413_add := p_413_add + 1;   -- pl_413
          End If;

          -- Transition 418 - tr_418
          If (p_392_avail >= 1)
          Then
              p_392_avail := p_392_avail - 1;    -- pl_392
              p_419_add := p_419_add + 1;   -- pl_419
          End If;

          -- Transition 443 - tr_443
          If (p_164_avail >= 1) and
             (p_157_avail >= 1) and 
             (conv_integer(TICKET_IN_2) = 1 AND conv_integer(PRESS1_IN_2) = 1 AND conv_integer(ABERTO_IN) = 1) -- guard expr 
          Then
              p_164_avail := p_164_avail - 1;    -- pl_4_2
              p_157_avail := p_157_avail - 1;    -- CAP_1
              p_166_add := p_166_add + 1;   -- pl_6_2
              p_380_add := p_380_add + 1;   -- pl_380
          End If;

          -- Transition 449 - tr_449
          If (p_448_avail >= 1)
          Then
              p_448_avail := p_448_avail - 1;    -- pl_448
              p_93_add := p_93_add + 1;   -- VAGAS_1
          End If;

          -- Transition 454 - tr_454
          If (p_453_avail >= 1)
          Then
              p_453_avail := p_453_avail - 1;    -- pl_453
              p_93_add := p_93_add + 1;   -- VAGAS_1
          End If;

          -- Transition 459 - tr_459
          If (p_458_avail >= 1)
          Then
              p_458_avail := p_458_avail - 1;    -- pl_458
              p_41_add := p_41_add + 1;   -- VAGAS_2
          End If;

          -- Transition 464 - tr_464
          If (p_463_avail >= 1)
          Then
              p_463_avail := p_463_avail - 1;    -- pl_463
              p_41_add := p_41_add + 1;   -- VAGAS_2
          End If;

          -- Transition 229 - tr_229
          If (p_40_avail >= 1) and 
             (p_157 = 0) -- guard expr 
          Then
              p_40_avail := p_40_avail - 1;    -- CAP_2
              p_157_add := p_157_add + 1;   -- CAP_1
          End If;

          -- Transition 232 - tr_232
          If (p_157_avail >= 1) and 
             (p_40 = 0) -- guard expr 
          Then
              p_157_avail := p_157_avail - 1;    -- CAP_1
              p_40_add := p_40_add + 1;   -- CAP_2
          End If;

          -- Calculate final place marking:
          p_2 <= p_2_avail + p_2_add;
          p_4 <= p_4_avail + p_4_add;
          p_6 <= p_6_avail + p_6_add;
          p_8 <= p_8_avail + p_8_add;
          p_10 <= p_10_avail + p_10_add;
          p_40 <= p_40_avail + p_40_add;
          p_41 <= p_41_avail + p_41_add;
          p_49 <= p_49_avail + p_49_add;
          p_56 <= p_56_avail + p_56_add;
          p_59 <= p_59_avail + p_59_add;
          p_67 <= p_67_avail + p_67_add;
          p_80 <= p_80_avail + p_80_add;
          p_82 <= p_82_avail + p_82_add;
          p_84 <= p_84_avail + p_84_add;
          p_93 <= p_93_avail + p_93_add;
          p_110 <= p_110_avail + p_110_add;
          p_112 <= p_112_avail + p_112_add;
          p_114 <= p_114_avail + p_114_add;
          p_157 <= p_157_avail + p_157_add;
          p_162 <= p_162_avail + p_162_add;
          p_164 <= p_164_avail + p_164_add;
          p_166 <= p_166_avail + p_166_add;
          p_168 <= p_168_avail + p_168_add;
          p_170 <= p_170_avail + p_170_add;
          p_199 <= p_199_avail + p_199_add;
          p_202 <= p_202_avail + p_202_add;
          p_204 <= p_204_avail + p_204_add;
          p_208 <= p_208_avail + p_208_add;
          p_235 <= p_235_avail + p_235_add;
          p_237 <= p_237_avail + p_237_add;
          p_239 <= p_239_avail + p_239_add;
          p_241 <= p_241_avail + p_241_add;
          p_243 <= p_243_avail + p_243_add;
          p_268 <= p_268_avail + p_268_add;
          p_271 <= p_271_avail + p_271_add;
          p_273 <= p_273_avail + p_273_add;
          p_277 <= p_277_avail + p_277_add;
          p_303 <= p_303_avail + p_303_add;
          p_305 <= p_305_avail + p_305_add;
          p_307 <= p_307_avail + p_307_add;
          p_313 <= p_313_avail + p_313_add;
          p_315 <= p_315_avail + p_315_add;
          p_317 <= p_317_avail + p_317_add;
          p_354 <= p_354_avail + p_354_add;
          p_359 <= p_359_avail + p_359_add;
          p_364 <= p_364_avail + p_364_add;
          p_369 <= p_369_avail + p_369_add;
          p_380 <= p_380_avail + p_380_add;
          p_386 <= p_386_avail + p_386_add;
          p_392 <= p_392_avail + p_392_add;
          p_397 <= p_397_avail + p_397_add;
          p_403 <= p_403_avail + p_403_add;
          p_408 <= p_408_avail + p_408_add;
          p_413 <= p_413_avail + p_413_add;
          p_419 <= p_419_avail + p_419_add;
          p_429 <= p_429_avail + p_429_add;
          p_436 <= p_436_avail + p_436_add;
          p_448 <= p_448_avail + p_448_add;
          p_453 <= p_453_avail + p_453_add;
          p_458 <= p_458_avail + p_458_add;
          p_463 <= p_463_avail + p_463_add;

          -- Apply output events to ouput signals:

          -- Calculate transition-action-output final values:
        End If;
      End If;
    End PROCESS;


    proc_place_outputs: PROCESS( Clk, Enable ) IS
    Variable exp_res, new_value: Integer;
    Begin
      If rising_edge(Clk) Then
        If Reset='1' Then
          s_CANC_IN <= '0';
          s_CANC_OUT <= '0';
          s_CANC_IN_2 <= '0';
          s_CANC_OUT_2 <= '0';
          s_PISO2_FULL <= '0';
          s_PISO1_FULL <= '0';
          s_CANC_OUT_3 <= '0';
          s_CANC_IN_3 <= '0';
          s_CARRO_IN_2 <= '0';
          s_CARRO_IN_3 <= '0';
          s_CARRO_IN <= '0';
          s_CARRO_OUT <= '0';
          s_CARRO_OUT_2 <= '0';
          s_CARRO_OUT_3 <= '0';
          s_OCU_PISO_1 <= 0;
          s_OCU_PISO_2 <= 0;
          s_Carro_12 <= '0';
          s_Carro_21 <= '0';

        Elsif Enable='1' Then

          -- Signal CANC_IN default value:
          new_value := 0;

          -- CANC_IN action on place pl_10(p_10)
          If p_10 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_IN action on place pl_6(p_6)
          If p_6 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_IN action on place pl_8(p_8)
          If p_8 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CANC_IN and check result range:
          If new_value < 0 Then s_CANC_IN <= '0';
            Elsif new_value > 1 Then s_CANC_IN <= '1';
            Else s_CANC_IN <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CANC_OUT default value:
          new_value := 0;

          -- CANC_OUT action on place pl_56(p_56)
          If p_56 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_OUT action on place pl_59(p_59)
          If p_59 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_OUT action on place pl_67(p_67)
          If p_67 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CANC_OUT and check result range:
          If new_value < 0 Then s_CANC_OUT <= '0';
            Elsif new_value > 1 Then s_CANC_OUT <= '1';
            Else s_CANC_OUT <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CANC_IN_2 default value:
          new_value := 0;

          -- CANC_IN_2 action on place pl_10_2(p_170)
          If p_170 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_IN_2 action on place pl_6_2(p_166)
          If p_166 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_IN_2 action on place pl_8_2(p_168)
          If p_168 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CANC_IN_2 and check result range:
          If new_value < 0 Then s_CANC_IN_2 <= '0';
            Elsif new_value > 1 Then s_CANC_IN_2 <= '1';
            Else s_CANC_IN_2 <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CANC_OUT_2 default value:
          new_value := 0;

          -- CANC_OUT_2 action on place pl_56_2(p_202)
          If p_202 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_OUT_2 action on place pl_59_2(p_204)
          If p_204 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_OUT_2 action on place pl_67_2(p_208)
          If p_208 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CANC_OUT_2 and check result range:
          If new_value < 0 Then s_CANC_OUT_2 <= '0';
            Elsif new_value > 1 Then s_CANC_OUT_2 <= '1';
            Else s_CANC_OUT_2 <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal PISO2_FULL default value:
          new_value := 0;

          -- PISO2_FULL action on place VAGAS_1(p_93)
          If p_93 > 0 Then
            exp_res := 1;
            If (p_93 >= 60)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store PISO2_FULL and check result range:
          If new_value < 0 Then s_PISO2_FULL <= '0';
            Elsif new_value > 1 Then s_PISO2_FULL <= '1';
            Else s_PISO2_FULL <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal PISO1_FULL default value:
          new_value := 0;

          -- PISO1_FULL action on place VAGAS_2(p_41)
          If p_41 > 0 Then
            exp_res := 1;
            If (p_41 >= 40)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store PISO1_FULL and check result range:
          If new_value < 0 Then s_PISO1_FULL <= '0';
            Elsif new_value > 1 Then s_PISO1_FULL <= '1';
            Else s_PISO1_FULL <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CANC_OUT_3 default value:
          new_value := 0;

          -- CANC_OUT_3 action on place pl_56_2_2(p_271)
          If p_271 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_OUT_3 action on place pl_59_2_2(p_273)
          If p_273 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_OUT_3 action on place pl_67_2_2(p_277)
          If p_277 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CANC_OUT_3 and check result range:
          If new_value < 0 Then s_CANC_OUT_3 <= '0';
            Elsif new_value > 1 Then s_CANC_OUT_3 <= '1';
            Else s_CANC_OUT_3 <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CANC_IN_3 default value:
          new_value := 0;

          -- CANC_IN_3 action on place pl_10_2_2(p_243)
          If p_243 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_IN_3 action on place pl_6_2_2(p_239)
          If p_239 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- CANC_IN_3 action on place pl_8_2_2(p_241)
          If p_241 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CANC_IN_3 and check result range:
          If new_value < 0 Then s_CANC_IN_3 <= '0';
            Elsif new_value > 1 Then s_CANC_IN_3 <= '1';
            Else s_CANC_IN_3 <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CARRO_IN_2 default value:
          new_value := 0;

          -- CARRO_IN_2 action on place pl_354(p_354)
          If p_354 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CARRO_IN_2 and check result range:
          If new_value < 0 Then s_CARRO_IN_2 <= '0';
            Elsif new_value > 1 Then s_CARRO_IN_2 <= '1';
            Else s_CARRO_IN_2 <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CARRO_IN_3 default value:
          new_value := 0;

          -- CARRO_IN_3 action on place pl_364(p_364)
          If p_364 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CARRO_IN_3 and check result range:
          If new_value < 0 Then s_CARRO_IN_3 <= '0';
            Elsif new_value > 1 Then s_CARRO_IN_3 <= '1';
            Else s_CARRO_IN_3 <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CARRO_IN default value:
          new_value := 0;

          -- CARRO_IN action on place pl_359(p_359)
          If p_359 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CARRO_IN and check result range:
          If new_value < 0 Then s_CARRO_IN <= '0';
            Elsif new_value > 1 Then s_CARRO_IN <= '1';
            Else s_CARRO_IN <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CARRO_OUT default value:
          new_value := 0;

          -- CARRO_OUT action on place pl_403(p_403)
          If p_403 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CARRO_OUT and check result range:
          If new_value < 0 Then s_CARRO_OUT <= '0';
            Elsif new_value > 1 Then s_CARRO_OUT <= '1';
            Else s_CARRO_OUT <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CARRO_OUT_2 default value:
          new_value := 0;

          -- CARRO_OUT_2 action on place pl_397(p_397)
          If p_397 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CARRO_OUT_2 and check result range:
          If new_value < 0 Then s_CARRO_OUT_2 <= '0';
            Elsif new_value > 1 Then s_CARRO_OUT_2 <= '1';
            Else s_CARRO_OUT_2 <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal CARRO_OUT_3 default value:
          new_value := 0;

          -- CARRO_OUT_3 action on place pl_392(p_392)
          If p_392 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store CARRO_OUT_3 and check result range:
          If new_value < 0 Then s_CARRO_OUT_3 <= '0';
            Elsif new_value > 1 Then s_CARRO_OUT_3 <= '1';
            Else s_CARRO_OUT_3 <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal OCU_PISO_1 default value:
          new_value := 0;

          -- OCU_PISO_1 action on place VAGAS_2(p_41)
          If p_41 > 0 Then
            exp_res := p_41;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store OCU_PISO_1 and check result range:
          If new_value < 0 Then s_OCU_PISO_1 <= 0;
            Elsif new_value > 100 Then s_OCU_PISO_1 <= 100;
            Else s_OCU_PISO_1 <= new_value;
          End If;

          -- Signal OCU_PISO_2 default value:
          new_value := 0;

          -- OCU_PISO_2 action on place VAGAS_1(p_93)
          If p_93 > 0 Then
            exp_res := p_93;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Store OCU_PISO_2 and check result range:
          If new_value < 0 Then s_OCU_PISO_2 <= 0;
            Elsif new_value > 100 Then s_OCU_PISO_2 <= 100;
            Else s_OCU_PISO_2 <= new_value;
          End If;

          -- Signal Carro_12 default value:
          new_value := 0;

          -- Carro_12 action on place pl_448(p_448)
          If p_448 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Carro_12 action on place pl_453(p_453)
          If p_453 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- Store Carro_12 and check result range:
          If new_value < 0 Then s_Carro_12 <= '0';
            Elsif new_value > 1 Then s_Carro_12 <= '1';
            Else s_Carro_12 <= conv_std_logic_vector(new_value,1)(0);
          End If;

          -- Signal Carro_21 default value:
          new_value := 0;

          -- Carro_21 action on place pl_458(p_458)
          If p_458 > 0 Then
            exp_res := 1;
            If (TRUE)
              Then new_value := exp_res;
            End If;
          End If;

          -- Carro_21 action on place pl_463(p_463)
          If p_463 > 0 Then
            exp_res := 1;
            If (TRUE) and
               (ABS(exp_res - 0) > ABS(new_value - 0))
              Then new_value := exp_res;
            End If;
          End If;

          -- Store Carro_21 and check result range:
          If new_value < 0 Then s_Carro_21 <= '0';
            Elsif new_value > 1 Then s_Carro_21 <= '1';
            Else s_Carro_21 <= conv_std_logic_vector(new_value,1)(0);
          End If;

        End If;
      End If;
    End PROCESS;

    CANC_IN <= s_CANC_IN;
    CANC_OUT <= s_CANC_OUT;
    CANC_IN_2 <= s_CANC_IN_2;
    CANC_OUT_2 <= s_CANC_OUT_2;
    PISO2_FULL <= s_PISO2_FULL;
    PISO1_FULL <= s_PISO1_FULL;
    CANC_OUT_3 <= s_CANC_OUT_3;
    CANC_IN_3 <= s_CANC_IN_3;
    CARRO_IN_2 <= s_CARRO_IN_2;
    CARRO_IN_3 <= s_CARRO_IN_3;
    CARRO_IN <= s_CARRO_IN;
    CARRO_OUT <= s_CARRO_OUT;
    CARRO_OUT_2 <= s_CARRO_OUT_2;
    CARRO_OUT_3 <= s_CARRO_OUT_3;
    OCU_PISO_1 <= s_OCU_PISO_1;
    OCU_PISO_2 <= s_OCU_PISO_2;
    Carro_12 <= s_Carro_12;
    Carro_21 <= s_Carro_21;

End Structural;
